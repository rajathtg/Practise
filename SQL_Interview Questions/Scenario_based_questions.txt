EMPLOYEE_ID	DEPT	NAME		SALARY
100			Finance	Jennifer	4400
100			Sales	Jennifer	4400
101			Finance	Michael		13000
101			Procure	Michael		13000
101			Admin	Michael		13000
102			Finance	Pat			6000
102			Admin	Pat			6000
103			Sales	Den			11000

1. Find the 3rd Highest Salary from above Table??

select * 
from 
(
select EMPLOYEE_ID,NAME,SALARY,dense_rank() over(order by SALARY desc) as rank_position from EMPLOYEE
) emp where rank_position = 3
;

2. Find the 3rd Highest salary from above table department wise?

select * 
from 
(
select EMPLOYEE_ID,NAME,DEPT,SALARY,dense_rank() over(partition by DEPT order by SALARY desc) as rank_position from EMPLOYEE
) emp where rank_position = 2
;

3. When to use having and when to use a where clause?
-We can use having on a aggregated column directly, instead of going for a sub_query to use a where clause for the same aggregated column, which you have been practising all these days.

4. How to find the duplicates in the table?
one col >> select DEPT, count(1) from EMPLOYEE having count(1) > 1
two col >> select DEPT,NAME,count(1) from EMPLOYEE having count(1) > 1

5. How to delete the duplicates?
with cte as (select *,row_number() over(partition by DEPT order by DEPT) as rn from EMPLOYEE)
delete from cte where rn > 1
Note: Wherever there is a duplicate entry row numbers will be 1,2,3,... therefore deleting greater than 1 will remove the duplicate entry

6. Difference between union and union all?
Union ALL >> Will print the consolidated result from both the tables including duplicates
Union >> Will print the consolidated result from both the tables after removing duplicates

select * from A
UNION ALL
select * from B

select * from A
UNION
select * from B

7. Difference between rank(),dense_rank() and row_number()?
emp		SALARY	row_number	rank() dense_rank()
Jack	1000	1			1		1
Sparrow	800		2			2		2
Amber	600		3			3		3
Heard	600		4			3		3
Alimony	200		5			5		4

5. How find the list of the employees whose department ID is not present in the department table?
Performance of Query is poor in this case >>> select * from emp where department_id not in (select department_id from dept)

Let us improve performance by using left join >> 
select emp.*,dept.dept_id,dept.dept_name from emp LEFT JOIN dept on emp.department_id=dept.dep_id
where dept.dept_name is NULL

6. To find manager_salary > emp_salary using a self join?

emp_id	emp_name	sal		manager_id
1		Ankit		10000	4
2		Mohit		15000	5

select e.emp_id,e.emp_name,m.emp_name as manager_name,e.salary,m.salary as manager_salary 
from emp e inner join emp m on e.manager_id = m.emp_id
where e.salary > m.salary

(OR)

SELECT *
FROM employees w,
     employees m
WHERE w.manager_id = m.emp_id
  AND w.salary> m.salary;
  
7. Update query to Swap Gender??

UPDATE orders set customer_gender='MALE' where customer_gender='FEMALE' >>> This will make all female to male, but this will make all the females to male and later how you will you identify which are male that needs to be made as female

update orders set customer_gender case when customer_gender='Male' then 'Female'
					   when customer_gender='Female' then 'Male' end
					   
					   
SDET- QA Automation Techie					   